// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`android.xml 1`] = `
"
<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<resources>
    <property name=\\"SIZINGA\\" category=\\"spacing\\">20px</property>
    <property name=\\"TOKEN_SAME_NAME_AS_ALIAS\\" category=\\"test\\">foo</property>
    <property name=\\"TOKEN_WITH_QUOTES_IN_VALUE\\" category=\\"test\\">'Salesforce Sans', \\"Helvetica Neue\\", sans-serif</property>
    <property name=\\"TOKEN_A\\" category=\\"test\\">#FF0000</property>
    <property name=\\"TOKEN_B\\" category=\\"test\\">#FFFFFF</property>
    <property name=\\"TOKEN_A_A\\" category=\\"test\\">#FF0000 #FF0000</property>
    <property name=\\"TOKEN_C\\" category=\\"test\\">#000000</property>
    <property name=\\"TOKEN_A_B\\" category=\\"test\\">#FFFFFF</property>
    <color name=\\"COLORA\\" category=\\"background-color\\">#ffbada55</color>
</resources>
"
`;

exports[`aura.tokens 1`] = `
"    
<aura:tokens extends=\\"theme\\">
  <aura:import name=\\"importOne\\" />
  <aura:import name=\\"importTwo\\" />
  <aura:token name=\\"tokenA\\" property=\\"background\\" value=\\"#FFFFFF\\" />
</aura:tokens>
  "
`;

exports[`common.js 1`] = `
"
module.exports = {
    
    sizinga: \\"20px\\",
    
    tokenSameNameAsAlias: \\"foo\\",
    // This should not get escaped in the output
    tokenWithQuotesInValue: \\"'Salesforce Sans', \\\\\\"Helvetica Neue\\\\\\", sans-serif\\",
    
    tokenA: \\"#FF0000\\",
    
    tokenB: \\"#FFFFFF\\",
    
    tokenAA: \\"#FF0000 #FF0000\\",
    
    tokenC: \\"#000000\\",
    
    tokenAB: \\"#FFFFFF\\",
    
    colora: \\"rgb(186, 218, 85)\\",
};
"
`;

exports[`html 1`] = `
"
      <!DOCTYPE html>
      <html lang=\\"en\\">
        <head>
          <meta charset=\\"utf-8\\" />
          <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\" />
          <title>Design Tokens</title>
          <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\" />
          <link rel=\\"stylesheet\\" href=\\"https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css\\" />
          <style>
            html {
              box-sizing: border-box;
              font-size: 1em;
              font-family: Helvetica, Arial, sans-serif;
              line-height: 1.5;
              background: #fff;
              color: #444;
            }
            *,
            *:before,
            *:after {
              box-sizing: inherit;
            }
            body { font-size: .75rem; }
            ::-moz-selection {
              background: #b3d4fc;
              text-shadow: none;
            }
            ::selection {
              background: #b3d4fc;
              text-shadow: none;
            }
            .banner,
            .contentinfo { background: #f5f5f5; }
            .banner { padding: 1em 0; }
            .container {
              margin: 0 auto;
              padding: 0 2rem;
              max-width: 80rem;
            }
            main {
              margin-right: -2rem;
              margin-left:  -2rem;
              padding-bottom: 2rem;
            }
            h1 {
              margin: 0;
              font-weight: normal;
              line-height: 1.25;
            }
            table {
              table-layout: fixed;
              border-collapse: separate;
              border-spacing: 1rem;
              width: 100%;
            }
            th,
            td {
              padding: 0 1rem;
              vertical-align: baseline;
              word-break: break-word;
              hyphens: auto;
            }
            th {
              font-weight: normal;
              text-align: left;
            }
            thead th {
              border-bottom: 1px solid #eee;
              padding-top: 1rem;
              padding-bottom: .5rem;
              color: #999;
            }
            thead th:first-child {
              font-size: 1.25rem;
              color: inherit;
            }
            code { font-family: monaco, Consolas, monospace, monospace; }
            hr {
              display: block;
              margin: 2rem 0;
              border: 0;
              border-top: 1px solid #eee;
              padding: 0;
              height: 1px;
            }
            .metric-box,
            .radius-box {
              display: inline-block;
              vertical-align: middle;
              background: #eee;
            }
            .radius-box {
              width: 100%;
              height: 3rem;
            }
            .radius-box.borderRadiusCircle {
              width: 3rem;
            }
            .line-height-example {
              border-bottom: 1px solid #eee;
              background-image: -webkit-linear-gradient(#eee 1px, transparent 1px);
              background-image: linear-gradient(#eee 1px, transparent 1px);
              background-size: 100% 1rem;
            }
          </style>
        </head>
        <body>
          <header role=\\"banner\\" class=\\"banner\\">
            <div class=\\"container\\">
              <h1>Design Tokens</h1>
            </div>
          </header>
          <div class=\\"container\\">
            <main role=\\"main\\">
              
              
      <section>
        <table>
          
      <thead>
        <tr id=spacing>
          <th scope=\\"col\\">Spacing</th>
          <th scope=\\"col\\">Value</th>
          <th scope=\\"col\\">Examples</th>
          <th scope=\\"col\\">Usage</th>
        </tr>
      </thead>
    
          <tbody>
            <tr>
        <th scope=\\"row\\">
          <code>sizingA</code>
        </th>
        <td>
          <code>20px</code>
        </td>
        
        <td>
          <div class=\\"metric-box\\" style=\\"width: 20px; height: 20px;\\"></div>
        </td>
      
        <td></td>
      </tr>
          </tbody>
        </table>
        <hr />
      </section>
    
              
              
              
              
              
              
              
              
              
              
              
              
      <section>
        <table>
          
      <thead>
        <tr id=background-color>
          <th scope=\\"col\\">Background Colors</th>
          <th scope=\\"col\\">Value</th>
          <th scope=\\"col\\">Examples</th>
          <th scope=\\"col\\">Usage</th>
        </tr>
      </thead>
    
          <tbody>
            <tr>
        <th scope=\\"row\\">
          <code>colorA</code>
        </th>
        <td>
          <code>rgb(186, 218, 85)</code>
        </td>
        <td style=\\"background-color: rgb(186, 218, 85); border: 1px solid #f6f6f6;\\"></td>
        <td></td>
      </tr>
          </tbody>
        </table>
        <hr />
      </section>
    
              
              
              
              
              
              
              
              
              
              
            </main>
          </div>
        </body>
      </html>
    "
`;

exports[`ios.json 1`] = `
"{
  \\"properties\\": [
    {
      \\"type\\": \\"size\\",
      \\"category\\": \\"spacing\\",
      \\"name\\": \\"sizingA\\",
      \\"value\\": \\"20px\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenSameNameAsAlias\\",
      \\"value\\": \\"foo\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenWithQuotesInValue\\",
      \\"value\\": \\"'Salesforce Sans', \\\\\\"Helvetica Neue\\\\\\", sans-serif\\",
      \\"comment\\": \\"This should not get escaped in the output\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenA\\",
      \\"value\\": \\"#FF0000\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenB\\",
      \\"value\\": \\"#FFFFFF\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenAA\\",
      \\"value\\": \\"#FF0000 #FF0000\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenC\\",
      \\"value\\": \\"#000000\\"
    },
    {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"tokenAB\\",
      \\"value\\": \\"#FFFFFF\\"
    },
    {
      \\"type\\": \\"color\\",
      \\"category\\": \\"background-color\\",
      \\"name\\": \\"colorA\\",
      \\"value\\": \\"rgb(186, 218, 85)\\"
    }
  ]
}"
`;

exports[`json 1`] = `
"{
  \\"sizingA\\": \\"20px\\",
  \\"TOKEN_SAME_NAME_AS_ALIAS\\": \\"foo\\",
  \\"TOKEN_WITH_QUOTES_IN_VALUE\\": \\"'Salesforce Sans', \\\\\\"Helvetica Neue\\\\\\", sans-serif\\",
  \\"TOKEN_A\\": \\"#FF0000\\",
  \\"TOKEN_B\\": \\"#FFFFFF\\",
  \\"TOKEN_A_A\\": \\"#FF0000 #FF0000\\",
  \\"TOKEN_C\\": \\"#000000\\",
  \\"TOKEN_A_B\\": \\"#FFFFFF\\",
  \\"colorA\\": \\"#bada55\\"
}"
`;

exports[`less 1`] = `
"
  
  @sizing-a: 20px;
  
  @token-same-name-as-alias: foo;
  // This should not get escaped in the output
  @token-with-quotes-in-value: 'Salesforce Sans', \\"Helvetica Neue\\", sans-serif;
  
  @token-a: #FF0000;
  
  @token-b: #FFFFFF;
  
  @token-a-a: #FF0000 #FF0000;
  
  @token-c: #000000;
  
  @token-a-b: #FFFFFF;
  
  @color-a: rgb(186, 218, 85);
"
`;

exports[`list.scss 1`] = `
"
$a-list: (
    
    \\"sizing-a\\",
    
    \\"token-same-name-as-alias\\",
    // This should not get escaped in the output
    \\"token-with-quotes-in-value\\",
    
    \\"token-a\\",
    
    \\"token-b\\",
    
    \\"token-a-a\\",
    
    \\"token-c\\",
    
    \\"token-a-b\\",
    
    \\"color-a\\",
);
"
`;

exports[`map.scss 1`] = `
"
$a-map: (
    
    'sizing-a': (20px),
    
    'token-same-name-as-alias': (foo),
    // This should not get escaped in the output
    'token-with-quotes-in-value': ('Salesforce Sans', \\"Helvetica Neue\\", sans-serif),
    
    'token-a': (#FF0000),
    
    'token-b': (#FFFFFF),
    
    'token-a-a': (#FF0000 #FF0000),
    
    'token-c': (#000000),
    
    'token-a-b': (#FFFFFF),
    
    'color-a': (rgb(186, 218, 85)),
);
"
`;

exports[`map.variables.scss 1`] = `
"
$a-map: (
    
    'sizing-a': $sizing-a,
    
    'token-same-name-as-alias': $token-same-name-as-alias,
    // This should not get escaped in the output
    'token-with-quotes-in-value': $token-with-quotes-in-value,
    
    'token-a': $token-a,
    
    'token-b': $token-b,
    
    'token-a-a': $token-a-a,
    
    'token-c': $token-c,
    
    'token-a-b': $token-a-b,
    
    'color-a': $color-a,
);
"
`;

exports[`raw.json 1`] = `
"{
  \\"aliases\\": {
    \\"white\\": {
      \\"value\\": \\"#FFFFFF\\"
    },
    \\"TOKEN_SAME_NAME_AS_ALIAS\\": {
      \\"value\\": \\"foo\\"
    },
    \\"burgundy\\": {
      \\"value\\": \\"#FF0000\\"
    },
    \\"red\\": {
      \\"value\\": \\"#FF0000\\"
    },
    \\"scarlet\\": {
      \\"value\\": \\"#FF0000\\"
    },
    \\"crimson\\": {
      \\"value\\": \\"#FF0000\\"
    }
  },
  \\"props\\": {
    \\"sizingA\\": {
      \\"type\\": \\"size\\",
      \\"category\\": \\"spacing\\",
      \\"name\\": \\"sizingA\\",
      \\"value\\": \\"20px\\"
    },
    \\"TOKEN_SAME_NAME_AS_ALIAS\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_SAME_NAME_AS_ALIAS\\",
      \\"value\\": \\"foo\\"
    },
    \\"TOKEN_WITH_QUOTES_IN_VALUE\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_WITH_QUOTES_IN_VALUE\\",
      \\"value\\": \\"'Salesforce Sans', \\\\\\"Helvetica Neue\\\\\\", sans-serif\\",
      \\"comment\\": \\"This should not get escaped in the output\\"
    },
    \\"TOKEN_A\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_A\\",
      \\"value\\": \\"#FF0000\\"
    },
    \\"TOKEN_B\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_B\\",
      \\"value\\": \\"#FFFFFF\\"
    },
    \\"TOKEN_A_A\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_A_A\\",
      \\"value\\": \\"#FF0000 #FF0000\\"
    },
    \\"TOKEN_C\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_C\\",
      \\"value\\": \\"#000000\\"
    },
    \\"TOKEN_A_B\\": {
      \\"type\\": \\"token\\",
      \\"category\\": \\"test\\",
      \\"name\\": \\"TOKEN_A_B\\",
      \\"value\\": \\"#FFFFFF\\"
    },
    \\"colorA\\": {
      \\"type\\": \\"color\\",
      \\"category\\": \\"background-color\\",
      \\"name\\": \\"colorA\\",
      \\"value\\": \\"#bada55\\"
    }
  }
}"
`;

exports[`sass 1`] = `
"
  
  $sizing-a: 20px
  
  $token-same-name-as-alias: foo
  // This should not get escaped in the output
  $token-with-quotes-in-value: 'Salesforce Sans', \\"Helvetica Neue\\", sans-serif
  
  $token-a: #FF0000
  
  $token-b: #FFFFFF
  
  $token-a-a: #FF0000 #FF0000
  
  $token-c: #000000
  
  $token-a-b: #FFFFFF
  
  $color-a: rgb(186, 218, 85)
"
`;

exports[`sass.default 1`] = `"Format \\"sass.default\\" is not registered"`;

exports[`scss 1`] = `
"
  
  $sizing-a: 20px;
  
  $token-same-name-as-alias: foo;
  // This should not get escaped in the output
  $token-with-quotes-in-value: 'Salesforce Sans', \\"Helvetica Neue\\", sans-serif;
  
  $token-a: #FF0000;
  
  $token-b: #FFFFFF;
  
  $token-a-a: #FF0000 #FF0000;
  
  $token-c: #000000;
  
  $token-a-b: #FFFFFF;
  
  $color-a: rgb(186, 218, 85);
"
`;

exports[`scss.default 1`] = `"Format \\"scss.default\\" is not registered"`;

exports[`styl 1`] = `
"
  
  $sizing-a: 20px
  
  $token-same-name-as-alias: foo
  // This should not get escaped in the output
  $token-with-quotes-in-value: 'Salesforce Sans', \\"Helvetica Neue\\", sans-serif
  
  $token-a: #FF0000
  
  $token-b: #FFFFFF
  
  $token-a-a: #FF0000 #FF0000
  
  $token-c: #000000
  
  $token-a-b: #FFFFFF
  
  $color-a: rgb(186, 218, 85)
"
`;
